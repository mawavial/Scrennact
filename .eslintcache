[{"/home/matt/Documents/scrennact/src/index.tsx":"1","/home/matt/Documents/scrennact/src/App.tsx":"2","/home/matt/Documents/scrennact/src/pages/main/main.tsx":"3","/home/matt/Documents/scrennact/src/components/searchKeyboard/searchKeyboard.tsx":"4","/home/matt/Documents/scrennact/src/components/movies/movies.tsx":"5","/home/matt/Documents/scrennact/src/components/menu/menu.tsx":"6"},{"size":199,"mtime":1610226950114,"results":"7","hashOfConfig":"8"},{"size":768,"mtime":1610247822548,"results":"9","hashOfConfig":"8"},{"size":3421,"mtime":1610370895346,"results":"10","hashOfConfig":"8"},{"size":25400,"mtime":1610371603939,"results":"11","hashOfConfig":"8"},{"size":311,"mtime":1610370874766,"results":"12","hashOfConfig":"8"},{"size":4664,"mtime":1610371259910,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"rtf6he",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/matt/Documents/scrennact/src/index.tsx",[],["28","29"],"/home/matt/Documents/scrennact/src/App.tsx",[],"/home/matt/Documents/scrennact/src/pages/main/main.tsx",["30","31"],"import { useEffect, useRef, useState } from 'react';\nimport Movies from '../../components/movies/movies';\nimport SearchKeyboard from '../../components/searchKeyboard/searchKeyboard';\nimport Menu from '../../components/menu/menu';\n\n\ninterface IKeyChange {\n  value: number\n};\n\n\ninterface IMapper extends React.Props<any> {\n  value?: number,\n  focusedMenu?: boolean,\n  focusedMovies?: boolean,\n  focusedKeyboard?: boolean,\n};\n\nenum EWho {\n  menu,\n  keyboard,\n  movies\n}\n\n\nexport default function Main(props: IKeyChange): JSX.Element {\n\n\n  let mapper: IMapper = { value: props.value, focusedMenu: false, focusedMovies: false, focusedKeyboard: false };\n\n  let [isFocused, setFocus] = useState<IMapper>(mapper);\n  const menuFocus: any | null = useRef(null);\n  const keyboardFocus: any | null = useRef(null);\n  const moviesFocus: any | null = useRef(null);\n\n  let whoIsHandler = (value: EWho): void => {\n    switch (value) {\n      case EWho.keyboard:\n        setFocus({ ...isFocused, focusedKeyboard: true, focusedMenu: false, focusedMovies: false })\n        keyboardFocus?.current.focus();\n        break;\n      case EWho.menu:\n        setFocus({ ...isFocused, focusedMenu: true, focusedKeyboard:false, focusedMovies:false })\n        menuFocus?.current.focus();\n        break;\n      case EWho.movies:\n        setFocus({ ...isFocused, focusedMovies: true, focusedKeyboard: false, focusedMenu: false })\n        moviesFocus?.current.focus();\n        break;\n      default:\n        setFocus({ ...isFocused, focusedMenu: true, focusedKeyboard: false, focusedMovies:  false })\n        menuFocus?.current.focus();\n        break;\n    }\n  };\n\n\n  let focus = (): void => {\n    setFocus({ ...isFocused, focusedMenu: true, focusedKeyboard: false, focusedMovies:  false })\n    menuFocus?.current.focus();\n  };\n\n  useEffect(() => {\n    setFocus({ ...isFocused, value: props.value })\n    return () => {\n      setFocus({ ...isFocused, value: props.value })\n    }\n  }, [props.value]);\n\n  useEffect(() => {\n    focus();\n    return () => {\n      focus();\n    }\n  }, []);\n\n  return (\n    <>\n      <table style={{ width: '100%', height: '100%' }}>\n        <tbody>\n          <tr>\n            <td style={{\n              flexGrow: 1,\n              width: '10%',\n              height: '100%',\n              border: '2px solid',\n              borderRightColor: 'white',\n            }}\n              tabIndex={1}\n              onFocus={(e): void => setFocus({ ...isFocused, focusedMenu: true })}\n              ref={menuFocus}\n            >\n              <Menu value={isFocused} onChange={whoIsHandler} />\n            </td>\n            <td style={{\n              width: '35%',\n              height: '100%',\n              border: '2px solid',\n              borderRightColor: 'white',\n\n            }}\n              tabIndex={2}\n              onFocus={(e): void => setFocus({ ...isFocused, focusedKeyboard: true })}\n              ref={keyboardFocus}\n            >\n              <SearchKeyboard value={isFocused} onChange={whoIsHandler} />\n            </td>\n            <td style={{\n              width: '45%',\n              height: '100%'\n            }}\n              tabIndex={3}\n              onFocus={(e): void => setFocus({ ...isFocused, focusedMovies: true })}\n              ref={moviesFocus}\n            >\n              <Movies value={isFocused} onChange={whoIsHandler} />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n}\n","/home/matt/Documents/scrennact/src/components/searchKeyboard/searchKeyboard.tsx",["32","33","34"],"/home/matt/Documents/scrennact/src/components/movies/movies.tsx",[],"/home/matt/Documents/scrennact/src/components/menu/menu.tsx",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":68,"column":6,"nodeType":"42","endLine":68,"endColumn":19,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":75,"column":6,"nodeType":"42","endLine":75,"endColumn":8,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":25,"column":17,"nodeType":"48","messageId":"49","endLine":25,"endColumn":25},{"ruleId":"40","severity":1,"message":"50","line":204,"column":8,"nodeType":"42","endLine":204,"endColumn":19,"suggestions":"51"},{"ruleId":"40","severity":1,"message":"52","line":208,"column":7,"nodeType":"42","endLine":208,"endColumn":17,"suggestions":"53"},{"ruleId":"40","severity":1,"message":"54","line":142,"column":6,"nodeType":"42","endLine":142,"endColumn":17,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isFocused'. Either include it or remove the dependency array. You can also do a functional update 'setFocus(i => ...)' if you only need 'isFocused' in the 'setFocus' call.","ArrayExpression",["58"],"React Hook useEffect has a missing dependency: 'focus'. Either include it or remove the dependency array.",["59"],"@typescript-eslint/no-unused-vars","'setInput' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'position' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["60"],"React Hook useEffect has a missing dependency: 'managePosition'. Either include it or remove the dependency array.",["61"],"React Hook useEffect has missing dependencies: 'goDown', 'goUp', 'manager', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [isFocused, props.value]",{"range":"73","text":"74"},"Update the dependencies array to be: [focus]",{"range":"75","text":"76"},"Update the dependencies array to be: [isFocused, position, props]",{"range":"77","text":"78"},"Update the dependencies array to be: [managePosition, position]",{"range":"79","text":"80"},"Update the dependencies array to be: [goDown, goUp, isFocused, manager, props]",{"range":"81","text":"82"},[1944,1957],"[isFocused, props.value]",[2039,2041],"[focus]",[8228,8239],"[isFocused, position, props]",[8304,8314],"[managePosition, position]",[3695,3706],"[goDown, goUp, isFocused, manager, props]"]